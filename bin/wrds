#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from argparse import ArgumentParser, RawDescriptionHelpFormatter
import textwrap
from babelian import Babelian

__version__ = '2.0'
__author__ = 'Yi Soo, (Jeff) An'
__license__ = 'MIT'
__copyright__ = '(c) 2015-2016 by {0}'.format(__author__)


def main():
    parser = ArgumentParser(
        formatter_class=RawDescriptionHelpFormatter,
        description=textwrap.dedent('''\
            Babelian is a dictionary on command-line.
            You can search some words/phrases/examples without running WebBrowser.
            This program will help Developers/Students/Teachers,
            or who learns 2nd languages.

                Author.
                 - Yi Soo, (Jeff) An
                 - https://github.com/memnoth/babelian

                Must use ISO 639-3 code with -f, -d.
            '''))
    parser.add_argument('word', metavar='word', type=str, nargs='+',
                        help='A word to search.')
    parser.add_argument('-s', type=str, default='eng', dest='src_lang',
                        help='A language code to search from. (default: eng)')
    parser.add_argument('-d', type=str, default='eng', dest='dest_lang',
                        help='A language code to search to. (defualt: eng)')
    parser.add_argument('-n', type=int, default=3, dest='print_limit',
                        help='Print limitation. (default: 3)')
    parser.add_argument('-ws', action='store_true',
                        help='Search with examples. (default: False)')
    parser.add_argument('-os', action='store_true',
                        help='Search only examples. (default: False)')
    try:
        args = parser.parse_args()
    except Exception:
        print('Wrong options!')
        exit(0)
    else:
        Babelian.search_word(args)


if __name__ == '__main__':
    main()
